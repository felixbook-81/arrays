import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        task1();
        task2();
        task3();
        task4();
    }

    public static void task1() {


        /**
         * Объявите три массива:
         * <p>
         * Целочисленный массив, заполненный тремя цифрами — 1, 2 и 3 — с помощью ключевого слова new.
         * Массив, в котором можно хранить три дробных числа — 1.57, 7.654, 9.986. Массив сразу заполните значениями.
         * Произвольный массив. Тип и количество данных определите сами. Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.
         */

        int[] arr1 = new int[3];//Целочисленный массив, заполненный тремя цифрами — 1, 2 и 3 — с помощью ключевого слова new.

        arr1[0] = 1;
        arr1[1] = 2;
        arr1[2] = 3;

        double[] arr2 = {1.57, 7.654, 9.986};// Массив, в котором можно хранить три дробных числа — 1.57, 7.654, 9.986. Массив сразу заполните значениями.

        char[] arr3 = {'a', 'b', 'c'};//Произвольный массив. Тип и количество данных определите сами. Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.

    }

    public static void task2() {
        /**Распечатайте на отдельной строчке элементы каждого массива по порядку через запятую. В конце строки запятую ставить не надо.*/

        int[] arr1 = new int[3];

        double[] arr2 = {1.57, 7.654, 9.986};
        char[] arr3 = {'a', 'b', 'c'};

        for (int i = 0; i < arr1.length; i++) {
            System.out.print(arr1[i]);
            if (i != arr1.length - 1) {
                System.out.print(" , ");
            }
        }
        System.out.println();

        for (int i = 0; i < arr2.length; i++) {
            System.out.print(arr2[i]);
            if (i != arr2.length - 1) {
                System.out.print(" , ");
            }
        }
        System.out.println();

        for (int i = 0; i < arr3.length; i++) {
            System.out.print(arr3[i]);
            if (i != arr3.length - 1) {
                System.out.print(" , ");
            }
        }
        System.out.println();


    }

    public static void task3() {
/** Распечатайте на отдельной строчке элементы каждого массива в обратном порядке через запятую. В конце строки запятую ставить не надо.

 Если в задаче № 2 в консоль у вас вывелся результат:

 1, 2, 3
 1.57, 7.654, 9.986
 // произвольные элементы третьего массива

 то в этой задаче результат должен быть таким:

 3, 2, 1
 9.986, 7.654, 1.57
 // произвольные элементы третьего массива в обратном порядке*/


        int[] arr1 = {1, 2, 3};
        double[] arr2 = {1.57, 7.654, 9.986};
        char[] arr3 = {'a', 'b', 'c'};

        for (int i = arr1.length - 1; i >= 0; i--) {
            System.out.print(arr1[i]);

            if (arr1.length != 1) {
                System.out.print(", ");
            }
        }
        System.out.println();


        for (int i = arr2.length - 1; i >= 0; i--) {
            System.out.print(arr2[i]);

            if (arr2.length != 1) {
                System.out.print(", ");
            }
        }
        System.out.println();

        for (int i = arr3.length - 1; i >= 0; i--) {
            System.out.print(arr3[i]);

            if (arr3.length != 1) {
                System.out.print(", ");
            }
        }
        System.out.println();
    }

    public static void task4(){

        /**Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).

         Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания используйте циклы.

         Распечатайте результат преобразования в консоль.*/

        int[] arr1 = {1, 2, 3};
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] % 2 != 0) {
                arr1[i]+=1;
            }
        }

        System.out.println(Arrays.toString( arr1));
    }
}


            





